#
# Project level settings are highest priority ("local wins"), from <project dir>/.git/config
# Then user level settings from this file (~/.gitconfig)
# Then system level settings, from (on OSX using macports) /opt/local/etc/gitconfig
#
# To use this as your user level gitconfig:
# ln -s /path/to/gitconfig ~/.gitconfig
#
# To use it as your system level gitconfig:
# sudo ln -s /path/to/gitconfig /opt/local/etc/gitconfig
#

[alias]
	a = !git config --list | grep alias
	anw = !sh -c 'git diff -U0 -w --no-color "$@" | git apply --cached --ignore-whitespace --unidiff-zero -'   # add non-whitespace changes, from http://stackoverflow.com/a/7149602/1533892
	bd = for-each-ref --sort=committerdate refs/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	br = branch -v
	ba = branch -v -a
	ca = commit --amend
	can = commit --amend --no-edit
	car = commit --amend --reset-author
	ci = commit
	cl = config --list
	co = checkout
	cp = cherry-pick
	cpc = cherry-pick --continue
	df = diff --ignore-all-space --find-renames
	delrem = push origin --delete	# delete remote branch
	ds = diff --ignore-all-space --find-renames --staged
	dv = diff --ignore-all-space --find-renames --unified=50		# note: --unified=<number of lines of context around diff>
	ft = fetch
	gp = gh-pages-push
	l   = log --oneline --decorate --graph --tags
	lb  = log --oneline --decorate --graph --tags --remotes --branches
	ld  = log --oneline --decorate --graph --tags                      --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=iso
	lbd = log --oneline --decorate --graph --tags --remotes --branches --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=iso
	lt  = log --oneline --decorate --graph --tags                      --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=relative
	lbt = log --oneline --decorate --graph --tags --remotes --branches --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=relative
	lv = log -p
	ms = merge --squash
	pr = pull --rebase --autostash
	ps = push --tags --set-upstream origin HEAD
	psforce = push --force-with-lease origin HEAD
	ra = rebase --abort
	rc = rebase --continue
	rh = reset --hard
	ss = stash save
	sa = stash apply
	sp = stash pop
	st = status
	today = log --pretty=format:"%s%b" --since="midnight" --reverse
	up = pull --rebase --autostash	# requires git 2.9+
	# up = !git fetch && git rebase --autostash $(git for-each-ref --format \"%(upstream:short)\" $(git symbolic-ref -q HEAD))
	# up = !git fetch && git rebase --autostash FETCH_HEAD

[branch]
	autosetupmerge = true

[color]
	ui = auto

[color "branch"]
	current = magenta reverse
	local = magenta
	remote = green

[color "diff"]
	meta = blue bold
	frag = magenta bold
	old = red bold
	new = green bold

[core]
	# ignorecase = false
	autocrlf = false
	editor = code --wait --new-window
	excludesfile = ~/.gitignore
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	mergeoptions = --no-edit

[diff]
    tool = default-difftool

[difftool "default-difftool"]
    cmd = code --wait --new-window --diff $LOCAL $REMOTE

[push]
	default = matching

[merge]
	tool = opendiff

